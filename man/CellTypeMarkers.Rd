% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CellTypeMarkers.R
\name{CellTypeMarkers}
\alias{CellTypeMarkers}
\alias{importCellTypeMarkers}
\title{Cell-type markers}
\usage{
CellTypeMarkers(object, gene2symbol)

importCellTypeMarkers(file, organism, release, ignoreVersion = TRUE)
}
\arguments{
\item{object}{Object.}

\item{gene2symbol}{\code{GeneToSymbol}.
Gene-to-symbol mappings. Must contain \code{geneId} and \code{geneName} columns. See
\code{GeneToSymbol} for more information.}

\item{file}{\code{character(1)}.
File path.}

\item{organism}{\code{character(1)}.
Full Latin organism name (e.g. \code{"Homo sapiens"}).}

\item{release}{\code{integer(1)}.
Ensembl release version (e.g. \code{100}). We recommend setting this value if
possible, for improved reproducibility. When left unset, the latest release
available via AnnotationHub/ensembldb is used. Note that the latest version
available can vary, depending on the versions of AnnotationHub and
ensembldb in use.}

\item{ignoreVersion}{\code{logical(1)}.
Ignore identifier (e.g. transcript, gene) versions.
When applicable, the identifier containing version numbers will be stored
in \code{txIdVersion} and \code{geneIdVersion}, and the variants without versions
will be stored in \code{txId}, \code{txIdNoVersion}, \code{geneId}, and \code{geneIdNoVersion}.}
}
\value{
\code{CellTypeMarkers}.
}
\description{
Cell-type markers
}
\note{
Updated 2021-09-13.
}
\examples{
markers_dir <- system.file(
    file.path("extdata", "markers"),
    package = "AcidSingleCell"
)

cell_type_dir <- file.path(markers_dir, "cell-type")
files <- list.files(cell_type_dir, pattern = "*.csv", full.names = TRUE)
file <- files[[1L]]

organism <- syntactic::sentenceCase(
    gsub(
        pattern = "-",
        replacement = " ",
        x = AcidBase::basenameSansExt(file)
    )
)

## Ensembl release version.
release_file <- file.path(markers_dir, "ensembl-release.txt")
release <- as.integer(readLines(release_file))

x <- importCellTypeMarkers(
    file = file,
    organism = organism,
    release = release
)
print(x)
}
